/**************************************************************************
**
** Copyright (c) 2016 Bojan Petrovic
** Copyright (c) 2016 Radovan Zivkovic
** Contact: http://www.qt-project.org/legal
**
** This file is part of Qt Creator.
**
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and Digia.  For licensing terms and
** conditions see http://qt.digia.com/licensing.  For further information
** use the contact form at http://qt.digia.com/contact-us.
**
** GNU Lesser General Public License Usage
** Alternatively, this file may be used under the terms of the GNU Lesser
** General Public License version 2.1 as published by the Free Software
** Foundation and appearing in the file LICENSE.LGPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU Lesser General Public License version 2.1 requirements
** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** In addition, as a special exception, Digia gives you certain additional
** rights.  These rights are described in the Digia Qt LGPL Exception
** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
**
****************************************************************************/
// This file was generated by qlalr - DO NOT EDIT!
#ifndef VCPROJ_CONDITION_GRAMMAR_P_H
#define VCPROJ_CONDITION_GRAMMAR_P_H

class vcproj_condition_grammar
{
public:
  enum VariousConstants {
    EOF_SYMBOL = 0,
    TKN_AND = 3,
    TKN_APOSTROPHE = 22,
    TKN_BRACKET_C = 2,
    TKN_BRACKET_O = 1,
    TKN_DIVIDE = 11,
    TKN_EQUAL = 12,
    TKN_EXISTS = 6,
    TKN_GREATER = 18,
    TKN_GREATER_OR_EQUAL = 20,
    TKN_HAS_TRAILING_SLASH = 7,
    TKN_LESS = 17,
    TKN_LESS_OR_EQUAL = 19,
    TKN_MINUS = 9,
    TKN_NOT = 5,
    TKN_NOT_EQUAL = 13,
    TKN_NUMBER = 14,
    TKN_OR = 4,
    TKN_PIPE = 21,
    TKN_PLUS = 8,
    TKN_STRING_CONSTANT = 15,
    TKN_STRING_VARIABLE = 16,
    TKN_TIMES = 10,

    ACCEPT_STATE = 28,
    RULE_COUNT = 30,
    STATE_COUNT = 57,
    TERMINAL_COUNT = 23,
    NON_TERMINAL_COUNT = 11,

    GOTO_INDEX_OFFSET = 57,
    GOTO_INFO_OFFSET = 103,
    GOTO_CHECK_OFFSET = 103
  };

  static const char  *const    spell [];
  static const short             lhs [];
  static const short             rhs [];

#ifndef QLALR_NO_VCPROJ_CONDITION_GRAMMAR_DEBUG_INFO
  static const int     rule_index [];
  static const int      rule_info [];
#endif // QLALR_NO_VCPROJ_CONDITION_GRAMMAR_DEBUG_INFO

  static const short    goto_default [];
  static const short  action_default [];
  static const short    action_index [];
  static const short     action_info [];
  static const short    action_check [];

  static inline int nt_action (int state, int nt)
  {
    const int yyn = action_index [GOTO_INDEX_OFFSET + state] + nt;
    if (yyn < 0 || action_check [GOTO_CHECK_OFFSET + yyn] != nt)
      return goto_default [nt];

    return action_info [GOTO_INFO_OFFSET + yyn];
  }

  static inline int t_action (int state, int token)
  {
    const int yyn = action_index [state] + token;

    if (yyn < 0 || action_check [yyn] != token)
      return - action_default [state];

    return action_info [yyn];
  }
};


#endif // VCPROJ_CONDITION_GRAMMAR_P_H

