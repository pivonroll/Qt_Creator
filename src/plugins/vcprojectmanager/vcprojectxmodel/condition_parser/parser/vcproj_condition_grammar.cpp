/**************************************************************************
**
** Copyright (c) 2016 Bojan Petrovic
** Copyright (c) 2016 Radovan Zivkovic
** Contact: http://www.qt-project.org/legal
**
** This file is part of Qt Creator.
**
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and Digia.  For licensing terms and
** conditions see http://qt.digia.com/licensing.  For further information
** use the contact form at http://qt.digia.com/contact-us.
**
** GNU Lesser General Public License Usage
** Alternatively, this file may be used under the terms of the GNU Lesser
** General Public License version 2.1 as published by the Free Software
** Foundation and appearing in the file LICENSE.LGPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU Lesser General Public License version 2.1 requirements
** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** In addition, as a special exception, Digia gives you certain additional
** rights.  These rights are described in the Digia Qt LGPL Exception
** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
**
****************************************************************************/
// This file was generated by qlalr - DO NOT EDIT!
#include "vcproj_condition_grammar_p.h"

const char *const vcproj_condition_grammar::spell [] = {
  "end of file", 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 
#ifndef QLALR_NO_VCPROJ_CONDITION_GRAMMAR_DEBUG_INFO
"Goal", "Expression", "PrimaryExpression", "String", "ExistsExpression", "HasTrailingSlashExpression", "NumericExpression", 
  "NumericPrimaryExpression", "StringPipe", "StringType", "$accept"
#endif // QLALR_NO_VCPROJ_CONDITION_GRAMMAR_DEBUG_INFO
};

const short vcproj_condition_grammar::lhs [] = {
  23, 24, 24, 24, 24, 25, 25, 25, 25, 25, 
  25, 29, 29, 29, 29, 29, 29, 29, 29, 30, 
  30, 27, 28, 26, 26, 31, 31, 32, 32, 33};

const short vcproj_condition_grammar::rhs [] = {
  1, 3, 3, 2, 1, 3, 3, 1, 1, 3, 
  1, 3, 3, 3, 3, 3, 3, 3, 3, 1, 
  1, 4, 4, 3, 1, 3, 1, 1, 1, 2};


#ifndef QLALR_NO_VCPROJ_CONDITION_GRAMMAR_DEBUG_INFO
const int vcproj_condition_grammar::rule_info [] = {
    23, 24
  , 24, 24, 3, 25
  , 24, 24, 4, 25
  , 24, 5, 25
  , 24, 25
  , 25, 26, 12, 26
  , 25, 26, 13, 26
  , 25, 27
  , 25, 28
  , 25, 1, 24, 2
  , 25, 29
  , 29, 29, 17, 30
  , 29, 29, 18, 30
  , 29, 29, 19, 30
  , 29, 29, 20, 30
  , 29, 29, 8, 30
  , 29, 29, 9, 30
  , 29, 29, 10, 30
  , 29, 29, 11, 30
  , 30, 14
  , 30, 26
  , 27, 6, 1, 26, 2
  , 28, 7, 1, 26, 2
  , 26, 22, 31, 22
  , 26, 31
  , 31, 32, 21, 31
  , 31, 32
  , 32, 15
  , 32, 16
  , 33, 23, 0};

const int vcproj_condition_grammar::rule_index [] = {
  0, 2, 6, 10, 13, 15, 19, 23, 25, 27, 
  31, 33, 37, 41, 45, 49, 53, 57, 61, 65, 
  67, 69, 74, 79, 83, 85, 89, 91, 93, 95};
#endif // QLALR_NO_VCPROJ_CONDITION_GRAMMAR_DEBUG_INFO

const short vcproj_condition_grammar::action_default [] = {
  0, 0, 0, 0, 8, 1, 0, 0, 9, 0, 
  11, 5, 28, 29, 0, 25, 27, 0, 24, 0, 
  0, 10, 0, 2, 3, 0, 0, 22, 30, 0, 
  0, 23, 4, 0, 0, 0, 0, 0, 0, 0, 
  0, 20, 19, 21, 13, 15, 12, 14, 17, 16, 
  18, 0, 0, 6, 7, 0, 26};

const short vcproj_condition_grammar::goto_default [] = {
  6, 5, 11, 43, 4, 8, 10, 42, 15, 16, 
  0};

const short vcproj_condition_grammar::action_index [] = {
  40, -5, 65, 21, -23, 5, 1, -1, -23, 43, 
  80, -23, -23, -23, -6, -23, -18, -20, -23, 12, 
  43, -23, 43, -23, -23, 8, 2, -23, -23, 8, 
  3, -23, -23, 20, 11, 20, 20, 20, 20, 20, 
  20, -23, -23, -23, -23, -23, -23, -23, -23, -23, 
  -23, -3, -3, -23, -23, -5, -23, 

  8, -8, 27, -11, -11, -11, -11, -11, -11, 13, 
  -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, 
  15, -11, 17, -11, -11, 3, -11, -11, -11, -1, 
  -11, -11, -11, -11, 1, 5, 7, -6, 6, -2, 
  -3, -11, -11, -11, -11, -11, -11, -11, -11, -11, 
  -11, 0, 4, -11, -11, 2, -11};

const short vcproj_condition_grammar::action_info [] = {
  29, 28, 18, 55, 27, 31, 51, 52, 20, 22, 
  12, 13, 12, 13, 21, 20, 22, 0, 0, 1, 
  0, 0, 25, 12, 13, 41, 12, 13, 0, 0, 
  1, 0, 0, 1, 41, 12, 13, 0, 0, 0, 
  0, 2, 1, 0, 2, 9, 3, 7, 0, 3, 
  7, 0, 0, 0, 0, 12, 13, 0, 12, 13, 
  0, 0, 1, 0, 0, 1, 2, 0, 0, 0, 
  9, 3, 7, 0, 0, 0, 0, 0, 0, 0, 
  12, 13, 0, 0, 0, 0, 0, 1, 39, 38, 
  40, 33, 0, 0, 0, 0, 0, 36, 34, 37, 
  35, 0, 0, 

  17, 47, 30, 53, 50, 49, 26, 54, 44, 0, 
  56, 14, 45, 48, 46, 32, 14, 23, 14, 24, 
  14, 0, 0, 0, 0, 0, 0, 0, 19, 0, 
  14, 0, 0, 0, 0, 0, 0, 0};

const short vcproj_condition_grammar::action_check [] = {
  1, 0, 22, 21, 2, 2, 12, 13, 3, 4, 
  15, 16, 15, 16, 2, 3, 4, -1, -1, 22, 
  -1, -1, 1, 15, 16, 14, 15, 16, -1, -1, 
  22, -1, -1, 22, 14, 15, 16, -1, -1, -1, 
  -1, 1, 22, -1, 1, 5, 6, 7, -1, 6, 
  7, -1, -1, -1, -1, 15, 16, -1, 15, 16, 
  -1, -1, 22, -1, -1, 22, 1, -1, -1, -1, 
  5, 6, 7, -1, -1, -1, -1, -1, -1, -1, 
  15, 16, -1, -1, -1, -1, -1, 22, 8, 9, 
  10, 11, -1, -1, -1, -1, -1, 17, 18, 19, 
  20, -1, -1, 

  8, 7, 3, 3, 7, 7, 3, 3, 7, -1, 
  8, 3, 7, 7, 7, 2, 3, 2, 3, 2, 
  3, -1, -1, -1, -1, -1, -1, -1, 1, -1, 
  3, -1, -1, -1, -1, -1, -1, -1};

